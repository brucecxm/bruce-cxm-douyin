server:
  port: 7456  # 设置应用的端口号为7456




############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: satoken
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  isConcurrent: false







spring:

  # redis配置
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    # password:
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0

  application:
    # 应用的名称，可选
    name: DouyinUserService  # 设置应用名称为 DouyinUserService

  rabbitmq:
    host: 192.168.200.130  # RabbitMQ 服务器的主机地址
    port: 5672  # RabbitMQ 服务器的端口号
    username: itcast  # RabbitMQ 的用户名
    password: 123321  # RabbitMQ 的密码
    virtual-host: /  # RabbitMQ 的虚拟主机

  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver  # 数据库驱动类名
      url: jdbc:mysql://localhost:3306/douyintest?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true  # 数据库连接URL
      username: root  # 数据库用户名
      password: root  # 数据库密码

#  redis:
#    host: localhost  # Redis 服务器的主机地址
#    port: 6379  # Redis 服务器的端口号
#    password:  # Redis 密码（如果没有可以留空）
#    database: 0  # Redis 数据库索引
#
#  cache:
#    redis:
#      time-to-live: 1800000  # 设置缓存数据的过期时间（单位：毫秒，这里是30分钟）

  security:
    oauth2:
      client:
        registration:
          qq:
            client-id: YOUR_APP_ID  # QQ应用的App ID
            client-secret: YOUR_APP_KEY  # QQ应用的App Key
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"  # OAuth2重定向URI
            authorization-grant-type: authorization_code  # 授权类型
            scope: get_user_info  # 请求的权限范围
        provider:
          qq:
            authorization-uri: https://graph.qq.com/oauth2.0/authorize  # QQ的授权URI
            token-uri: https://graph.qq.com/oauth2.0/token  # QQ的令牌URI
            user-info-uri: https://graph.qq.com/user/get_user_info  # QQ的用户信息URI

mybatis-plus:
  configuration:
    # 在映射实体或者属性时，将数据库中表名和字段名中的下划线去掉，按照驼峰命名法映射
    map-underscore-to-camel-case: true  # 开启驼峰命名法映射
  global-config:
    db-config:
      id-type: ASSIGN_ID  # 全局主键策略，设置为分配ID

eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:10086/eureka  # Eureka 服务注册中心的地址
