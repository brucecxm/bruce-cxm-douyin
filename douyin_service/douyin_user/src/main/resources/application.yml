server:
  port: 7456  # 设置应用的端口号为7456

spring:
  application:
    # 应用的名称，可选
    name: DouyinUserService  # 设置应用名称为 DouyinUserService

  rabbitmq:
    host: 192.168.200.130  # RabbitMQ 服务器的主机地址
    port: 5672  # RabbitMQ 服务器的端口号
    username: itcast  # RabbitMQ 的用户名
    password: 123321  # RabbitMQ 的密码
    virtual-host: /  # RabbitMQ 的虚拟主机

  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver  # 数据库驱动类名
      url: jdbc:mysql://localhost:3306/douyintest?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&useSSL=false&allowPublicKeyRetrieval=true  # 数据库连接URL
      username: root  # 数据库用户名
      password: root  # 数据库密码

  redis:
    host: localhost  # Redis 服务器的主机地址
    port: 6379  # Redis 服务器的端口号
    password:  # Redis 密码（如果没有可以留空）
    database: 0  # Redis 数据库索引

  cache:
    redis:
      time-to-live: 1800000  # 设置缓存数据的过期时间（单位：毫秒，这里是30分钟）

  security:
    oauth2:
      client:
        registration:
          qq:
            client-id: YOUR_APP_ID  # QQ应用的App ID
            client-secret: YOUR_APP_KEY  # QQ应用的App Key
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"  # OAuth2重定向URI
            authorization-grant-type: authorization_code  # 授权类型
            scope: get_user_info  # 请求的权限范围
        provider:
          qq:
            authorization-uri: https://graph.qq.com/oauth2.0/authorize  # QQ的授权URI
            token-uri: https://graph.qq.com/oauth2.0/token  # QQ的令牌URI
            user-info-uri: https://graph.qq.com/user/get_user_info  # QQ的用户信息URI

mybatis-plus:
  configuration:
    # 在映射实体或者属性时，将数据库中表名和字段名中的下划线去掉，按照驼峰命名法映射
    map-underscore-to-camel-case: true  # 开启驼峰命名法映射
  global-config:
    db-config:
      id-type: ASSIGN_ID  # 全局主键策略，设置为分配ID

eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:10086/eureka  # Eureka 服务注册中心的地址
