<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bruce.dao.VideoDao">

    <resultMap type="com.bruce.entity.Video" id="VideoMap">
        <result property="videoId" column="video_id" jdbcType="INTEGER"/>
        <result property="authId" column="auth_id" jdbcType="INTEGER"/>
        <result property="musicId" column="music_id" jdbcType="INTEGER"/>
        <result property="videoUrl" column="video_url" jdbcType="VARCHAR"/>
        <result property="videoComment" column="video_comment" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="VideoMap">
        select
          video_id, auth_id, music_id, video_url, video_comment
        from video
        where video_id = #{videoId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="VideoMap">
        select
          video_id, auth_id, music_id, video_url, video_comment
        from video
        <where>
            <if test="videoId != null">
                and video_id = #{videoId}
            </if>
            <if test="authId != null">
                and auth_id = #{authId}
            </if>
            <if test="musicId != null">
                and music_id = #{musicId}
            </if>
            <if test="videoUrl != null and videoUrl != ''">
                and video_url = #{videoUrl}
            </if>
            <if test="videoComment != null and videoComment != ''">
                and video_comment = #{videoComment}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from video
        <where>
            <if test="videoId != null">
                and video_id = #{videoId}
            </if>
            <if test="authId != null">
                and auth_id = #{authId}
            </if>
            <if test="musicId != null">
                and music_id = #{musicId}
            </if>
            <if test="videoUrl != null and videoUrl != ''">
                and video_url = #{videoUrl}
            </if>
            <if test="videoComment != null and videoComment != ''">
                and video_comment = #{videoComment}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="videoId" useGeneratedKeys="true">
        insert into video(auth_id, music_id, video_url, video_comment)
        values (#{authId}, #{musicId}, #{videoUrl}, #{videoComment})
    </insert>

    <insert id="insertBatch" keyProperty="videoId" useGeneratedKeys="true">
        insert into video(auth_id, music_id, video_url, video_comment)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.authId}, #{entity.musicId}, #{entity.videoUrl}, #{entity.videoComment})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="videoId" useGeneratedKeys="true">
        insert into video(auth_id, music_id, video_url, video_comment)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.authId}, #{entity.musicId}, #{entity.videoUrl}, #{entity.videoComment})
        </foreach>
        on duplicate key update
        auth_id = values(auth_id),
        music_id = values(music_id),
        video_url = values(video_url),
        video_comment = values(video_comment)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update video
        <set>
            <if test="authId != null">
                auth_id = #{authId},
            </if>
            <if test="musicId != null">
                music_id = #{musicId},
            </if>
            <if test="videoUrl != null and videoUrl != ''">
                video_url = #{videoUrl},
            </if>
            <if test="videoComment != null and videoComment != ''">
                video_comment = #{videoComment},
            </if>
        </set>
        where video_id = #{videoId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from video where video_id = #{videoId}
    </delete>

</mapper>

